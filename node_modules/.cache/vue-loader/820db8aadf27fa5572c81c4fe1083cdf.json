{"remainingRequest":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/wison/dev/workspace1/front-end/formDesigner/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wison/dev/workspace1/front-end/formDesigner/src/components/custom/configs/radio.vue?vue&type=template&id=312a8762&","dependencies":[{"path":"/home/wison/dev/workspace1/front-end/formDesigner/src/components/custom/configs/radio.vue","mtime":1584967770117},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
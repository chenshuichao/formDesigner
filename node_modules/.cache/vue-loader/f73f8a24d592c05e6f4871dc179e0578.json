{"remainingRequest":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wison/dev/workspace1/front-end/formDesigner/src/components/Designer.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/wison/dev/workspace1/front-end/formDesigner/src/components/Designer.vue","mtime":1585667342849},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wison/dev/workspace1/front-end/formDesigner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuL3N0eWxlL2Rlc2lnbmVyLmNzcyI7CkBpbXBvcnQgIi4vc3R5bGUvZGVzaWduZXIuc2NzcyI7Ci5lbC1yYXRlewogIGRpc3BsYXk6aW5saW5lLWJsb2NrOwp9Cg=="},{"version":3,"sources":["Designer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA","file":"Designer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!--中间面板-->\n  <div class=\"center-board\" >\n    <div class=\"action-bar\">\n      <el-button icon=\"el-icon-view\" type=\"text\" @click=\"preview\">\n        预览\n      </el-button>\n      <el-button icon=\"el-icon-s-tools\" type=\"text\" @click=\"setting\">\n        设置\n      </el-button>\n      <el-button class=\"delete-btn\" icon=\"el-icon-delete-solid\" type=\"text\" @click=\"clear\">\n        清空\n      </el-button>\n      <el-button icon=\"el-icon-question\" type=\"text\" @click=\"help\">\n        帮助\n      </el-button>\n    </div>\n    <el-scrollbar class=\"center-scrollbar\">\n      <el-row class=\"center-board-row\" :gutter=\"formConf.gutter\">\n        <el-form\n          :size=\"formConf.size\"\n          :label-position=\"formConf.labelPosition\"\n          :disabled=\"formConf.disabled\"\n          :label-width=\"formConf.labelWidth + 'px'\"\n        >\n        <draggable class=\"drawing-board\" \n                   :list=\"list\" \n                   :animation=\"100\" \n                   group=\"componentsGroup\" \n                   >\n        <design-item \n            v-for=\"(element,index) in list\" \n            :key=\"index\" \n            :model=\"element\" \n            :activeItem=\"activeItem\"\n            @onActiveItemChange=\"handlerActiveItemChange\"\n            @copyItem=\"handlerItemCopy\"\n            @deleteItem=\"handlerItemDelete\"/>\n        </draggable>\n          <div v-show=\"infoShow\" class=\"empty-info\">\n            从左侧拖入或点选组件进行表单设计\n          </div>\n        </el-form>\n      </el-row>\n    </el-scrollbar>\n    <config-panel :activeItem=\"activeItem\"/>\n    <!-- 设计器配置弹出框 -->\n    <el-dialog  :visible.sync=\"formConfVisible\" width=\"30%\">\n        <el-form ref=\"formConf\" :model=\"formConf\" label-width=\"100px\">\n          <el-form-item label=\"表单名\">\n              <el-input class=\"input\" v-model=\"formConf.formRef\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"表单模型\">\n              <el-input class=\"input\" v-model=\"formConf.formModel\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"校验模型\">\n              <el-input class=\"input\" v-model=\"formConf.formRules\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"表单尺寸\">\n              <el-radio-group v-model=\"formConf.size\">\n                <el-radio-button label=\"medium\">中等</el-radio-button>\n                <el-radio-button label=\"small\">较小</el-radio-button>\n                <el-radio-button label=\"mini\">迷你</el-radio-button>\n              </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"标签对齐\">\n              <el-radio-group v-model=\"formConf.labelPosition\">\n                <el-radio-button label=\"right\">右对齐</el-radio-button>\n                <el-radio-button label=\"left\">左对齐</el-radio-button>\n                <el-radio-button label=\"top\">顶部对齐</el-radio-button>\n              </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"标签宽度\">\n              <el-input-number v-model=\"formConf.labelWidth\"  :min=\"60\" :max=\"140\"></el-input-number>\n          </el-form-item>\n          <el-form-item label=\"栅格间隔\">\n              <el-input-number v-model=\"formConf.gutter\"  :min=\"0\" :max=\"30\"></el-input-number>\n          </el-form-item>\n          <el-form-item label=\"禁用表单\">\n              <el-switch v-model=\"formConf.disabled\"></el-switch>\n          </el-form-item>\n        </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"formConfVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"handlerSaveFormConf\">确 定</el-button>\n        </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"previewVisible\" width=\"50%\" title=\"预览\" :modal=\"true\" :destroy-on-close=\"true\">\n      <preview :itemList=\"itemList\"  :formConf=\"formConf\"/>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport draggable from \"vuedraggable\";\nimport configPanel from './configPanel'\nimport designItem from './designItem'\nimport {getSimpleId} from \"./utils/IdGenerate\";\nimport {isLayout} from \"./utils/index\";\nimport formConf from \"./custom/formConf\";\nimport preview from \"./preview\";\n\nexport default {\n  name:\"Designer\",\n  components:{\n    draggable,\n    configPanel,\n    designItem,\n    preview\n  },\n  props:{\n    list: { \n      type: Array,\n      default:[]\n    }\n  },\n  data() {\n    return {\n      formConf:formConf,\n      activeItem:{},\n      lastActiveItem:{},\n      formConfVisible:false,\n      previewVisible:false,\n      itemList:[]\n    }\n  },\n  mounted() {\n    //设计器加载时，需要加载默认的配置\n  },\n  methods: {\n    preview(){\n      this.previewVisible= true;\n      const clone = JSON.parse(JSON.stringify(this.list))\n      this.itemList = clone;\n    },\n    setting(){\n      this.formConfVisible = true;\n    },\n    clear(){\n      this.$confirm('此操作将清空整个表单,是否继续?').then(() => {\n          this.$emit('clear'); \n      })\n    },\n    help(){\n      this.$message('帮助！');\n    },\n    handlerActiveItemChange(obj){\n      this.lastActiveItem = this.activeItem;\n      this.activeItem = obj;\n    },\n    handlerItemCopy(origin,parent){\n      if(isLayout(origin)){ //布局组件，需要复制布局组件以及下面的组件\n          const clone = JSON.parse(JSON.stringify(origin))\n          const uId = \"row_\"+getSimpleId();\n          clone.id = uId;\n          clone.columns.map((column,index)=>{\n            let itemList = [];\n            column.list.map((item,i)=>{\n              const cloneitem = JSON.parse(JSON.stringify(item))\n              const uId = \"fd_\"+getSimpleId();\n              cloneitem.id = uId;\n              itemList.push(cloneitem);\n            })\n            column.list = [];\n            column.list = itemList;\n          })\n          this.list.push(clone);\n          this.handlerActiveItemChange(clone);\n      }else{  //如果是普通组件，需要判断他是否再布局组件下。\n        if(parent){\n          parent.columns.map((column,index)=>{\n            if(column.list.some(item => item.id === origin.id)){\n              const clone = JSON.parse(JSON.stringify(origin))\n              const uId = \"fd_\"+getSimpleId();\n              clone.id = uId;\n              column.list.push(clone);\n              this.handlerActiveItemChange(clone);\n            }\n          })\n        }else{\n          const clone = JSON.parse(JSON.stringify(origin))\n          const uId = \"fd_\"+getSimpleId();\n          clone.id = uId;\n          this.list.push(clone);\n          this.handlerActiveItemChange(clone);\n        }\n      }\n    },\n    handlerItemDelete(origin,parent){\n      if(isLayout(origin)){ //如果是布局组件,则直接删除\n        const index = this.list.findIndex(item=>item.id === origin.id);\n        this.list.splice(index,1);\n      }else{  //如果不是布局组件，则先判断是不是再布局内部，如果不是，则直接删除就可以，如果是，则要在布局内部删除\n        if(parent){\n          parent.columns.map((column,index)=>{\n            const colIndex = column.list.findIndex(item=>item.id === origin.id);\n            if(colIndex>-1){\n              column.list.splice(colIndex,1);\n            }\n          })\n        }else{\n          const index = this.list.findIndex(item=>item.id === origin.id);\n          this.list.splice(index,1);\n          \n        }\n      }\n    },\n    handlerSaveFormConf(){\n      this.formConfVisible = false\n    }\n  },\n  computed:{\n    infoShow() {\n      return this.list.length<1;\n    }\n  },\n  watch: {\n    activeItem (newValue,oldValue) {\n      this.lastActiveItem = oldValue;\n    }\n  }\n}\n\n</script>\n<style lang=\"scss\">\n@import \"./style/designer.css\";\n@import \"./style/designer.scss\";\n.el-rate{\n  display:inline-block;\n}\n</style>"]}]}